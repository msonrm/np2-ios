name: Build and Upload to TestFlight

on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build and Upload to TestFlight
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 'latest-stable'
        
    - name: Setup Certificates and API
      env:
        DISTRIBUTION_CERTIFICATE_BASE64: ${{ secrets.DISTRIBUTION_CERTIFICATE_BASE64 }}
        API_KEY_ID: ${{ secrets.APPSTORE_API_KEY_ID }}
        API_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
        API_PRIVATE_KEY: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
      run: |
        # Create keychain
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        KEYCHAIN_PASSWORD=$(openssl rand -base64 32)
        
        security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
        security set-keychain-settings -lut 21600 "$KEYCHAIN_PATH"
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_PATH"
        
        # Import distribution certificate
        echo "$DISTRIBUTION_CERTIFICATE_BASE64" | base64 --decode > certificate.cer
        
        # Check certificate details
        echo "=== Certificate Information ==="
        openssl x509 -in certificate.cer -inform DER -text -noout | head -20
        echo "=== Certificate Subject ==="
        openssl x509 -in certificate.cer -inform DER -subject -noout
        echo "=== Certificate Issuer ==="
        openssl x509 -in certificate.cer -inform DER -issuer -noout
        
        security import certificate.cer -k "$KEYCHAIN_PATH" -T /usr/bin/codesign -A
        
        # List certificates in keychain
        echo "=== Certificates in Keychain ==="
        security find-identity -v -p codesigning "$KEYCHAIN_PATH"
        
        # Add keychain to search list
        security list-keychains -d user -s "$KEYCHAIN_PATH" login.keychain
        
        # Setup App Store Connect API
        mkdir -p ~/private_keys
        echo "$API_PRIVATE_KEY" > ~/private_keys/AuthKey_$API_KEY_ID.p8
        chmod 600 ~/private_keys/AuthKey_$API_KEY_ID.p8
        
    - name: Build and Archive
      env:
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        API_KEY_ID: ${{ secrets.APPSTORE_API_KEY_ID }}
        API_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
      run: |
        cd sdl2/iOS
        
        echo "=== Building for Distribution Testing ==="
        xcodebuild \
          -project np2sdl2.xcodeproj \
          -scheme np2sdl2 \
          -destination "generic/platform=iOS" \
          -configuration Release \
          -archivePath np2sdl2.xcarchive \
          IPHONEOS_DEPLOYMENT_TARGET=12.0 \
          CODE_SIGN_STYLE=Manual \
          CODE_SIGN_IDENTITY="Apple Distribution" \
          DEVELOPMENT_TEAM=$APPLE_TEAM_ID \
          PRODUCT_BUNDLE_IDENTIFIER=com.msonrm.np2-ios2 \
          -allowProvisioningUpdates \
          -authenticationKeyPath ~/private_keys/AuthKey_$API_KEY_ID.p8 \
          -authenticationKeyID $API_KEY_ID \
          -authenticationKeyIssuerID $API_ISSUER_ID \
          archive
          
    - name: Export IPA
      env:
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        API_KEY_ID: ${{ secrets.APPSTORE_API_KEY_ID }}
        API_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
      run: |
        cd sdl2/iOS
        
        # Create export options for app-store distribution
        cat > ExportOptions.plist << EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>method</key>
            <string>app-store-connect</string>
            <key>teamID</key>
            <string>$APPLE_TEAM_ID</string>
            <key>uploadBitcode</key>
            <false/>
            <key>uploadSymbols</key>
            <true/>
            <key>compileBitcode</key>
            <false/>
            <key>destination</key>
            <string>upload</string>
            <key>signingStyle</key>
            <string>automatic</string>
        </dict>
        </plist>
        EOF
        
        # Export IPA
        xcodebuild \
          -exportArchive \
          -archivePath np2sdl2.xcarchive \
          -exportPath export \
          -exportOptionsPlist ExportOptions.plist \
          -allowProvisioningUpdates \
          -authenticationKeyPath ~/private_keys/AuthKey_$API_KEY_ID.p8 \
          -authenticationKeyID $API_KEY_ID \
          -authenticationKeyIssuerID $API_ISSUER_ID
          
    - name: Upload to TestFlight
      env:
        API_KEY_ID: ${{ secrets.APPSTORE_API_KEY_ID }}
        API_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
      run: |
        cd sdl2/iOS
        
        echo "=== Uploading to TestFlight ==="
        xcrun altool --upload-app \
          --type ios \
          --file export/*.ipa \
          --apiKey $API_KEY_ID \
          --apiIssuer $API_ISSUER_ID \
          --verbose
          
    - name: Upload IPA Artifact
      uses: actions/upload-artifact@v4
      with:
        name: np2-ipa
        path: sdl2/iOS/export/*.ipa
        retention-days: 7
