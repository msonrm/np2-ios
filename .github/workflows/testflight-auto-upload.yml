name: Build and Upload to TestFlight

on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build and Upload to TestFlight
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 'latest-stable'
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        
    - name: Create Gemfile
      run: |
        cat > Gemfile << EOF
        source "https://rubygems.org"
        gem "fastlane"
        EOF
        bundle install
        
    - name: Setup Fastlane Match
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
        FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
        FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
      run: |
        mkdir -p fastlane
        cat > fastlane/Fastfile << EOF
        default_platform(:ios)
        
        platform :ios do
          desc "Build and upload to TestFlight"
          lane :beta do
            setup_ci
            
            # Import certificates and provisioning profiles
            import_certificate(
              certificate_path: "certificates/ios_distribution_nopass.p12",
              certificate_password: "",
              keychain_name: "login.keychain",
              keychain_password: ""
            )
            
            # Install provisioning profile
            install_provisioning_profile(path: "certificates/distribution.mobileprovision")
            
            # Build the app
            gym(
              scheme: "np2sdl2",
              workspace: nil,
              project: "sdl2/iOS/np2sdl2.xcodeproj",
              configuration: "Release",
              output_directory: "sdl2/iOS/export",
              output_name: "np2sdl2.ipa",
              export_method: "app-store",
              export_options: {
                method: "app-store",
                teamID: ENV["APPLE_TEAM_ID"],
                uploadBitcode: false,
                uploadSymbols: true,
                compileBitcode: false
              }
            )
            
            # Upload to TestFlight
            pilot(
              api_key_path: "AuthKey.p8",
              ipa: "sdl2/iOS/export/np2sdl2.ipa",
              skip_waiting_for_build_processing: true
            )
          end
        end
        EOF
        
    - name: Decode secrets
      env:
        PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
        APP_STORE_CONNECT_API_KEY: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
        API_KEY_ID: ${{ secrets.APPSTORE_API_KEY_ID }}
      run: |
        # Decode provisioning profile
        echo "$PROVISIONING_PROFILE_BASE64" | base64 --decode > certificates/distribution.mobileprovision
        
        # Create App Store Connect API key
        echo "$APP_STORE_CONNECT_API_KEY" > AuthKey.p8
        
    - name: Run Fastlane
      env:
        FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
        FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
      run: |
        cd /
        bundle exec fastlane ios beta
        
    - name: Upload IPA Artifact
      uses: actions/upload-artifact@v4
      with:
        name: np2-ipa
        path: sdl2/iOS/export/*.ipa
        retention-days: 7